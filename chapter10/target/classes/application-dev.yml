spring:
  devtools:
    restart:
      enabled: true #设置开启热部署
      additional-paths: com.example.demo #开启目录
  freemarker:
    cache: false  #页面不加载缓存，修改立即生效
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/course?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    username: root
    password: love3224
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化物理连接个数
      initial-size: 1
      # 最大连接池数量
      max-active: 20
      # 最小连接池数量
      min-idle: 5
      # 获取连接时最大等待时间(ms)
      max-wait: 60000
      # 开启缓存preparedStatement(PSCache)
      pool-prepared-statements: true
      # 启用PSCache后，指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      # 用来检测连接是否有效的sql
      validation-query: select 'x'
      # 申请连接时不检测连接是否有效
      test-on-borrow: false
      # 归还连接时不检测连接是否有效
      test-on-return: false
      # 申请连接时检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效（不影响性能）
      test-while-idle: true
      # 检测连接的间隔时间，若连接空闲时间 >= minEvictableIdleTimeMillis，则关闭物理连接
      time-between-eviction-runs-millis: 60000
      # 连接保持空闲而不被驱逐的最小时间(ms)
      min-evictable-idle-time-millis: 300000
      # 配置监控统计拦截的filters（不配置则监控界面sql无法统计），监控统计filter:stat，日志filter:log4j，防御sql注入filter:wall
      filters: stat,log4j,wall
      # 支持合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql(Sql合并)功能；慢SQL记录(配置超过5秒就是慢，默认是3秒)
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  application:
    name: springfox-swagger

mybatis:
  #  设置mapper地址
  mapper-locations: classpath:mapping/*Mapper.xml
  #  配置别名
  type-aliases-package: com.example.demo.entity
  #  识别驼峰命名
  configuration:
    map-underscore-to-camel-case: true

logging:
  level:
    com.example.demo: debug
  file:
    path: /Users/apple/workspace/TestNgStudy/chapter10/src/main/java/com/example/demo/logging
server:
  port: 8081

swagger:
  enable: true
  application-name: ${spring.application.name}
  application-version: 1.0.0.0
  application-description: springfox swagger 3.0整合Demo
  try-host: http://localhost:${server.port}
